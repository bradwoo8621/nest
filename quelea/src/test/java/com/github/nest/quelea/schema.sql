DROP TABLE T_BANK IF EXISTS;
DROP TABLE T_PARTY_ROLE IF EXISTS;
DROP TABLE T_PARTY_RELATION IF EXISTS;
DROP TABLE T_PARTY_ADDRESS IF EXISTS;
DROP TABLE T_PARTY_ACCOUNT IF EXISTS;
DROP TABLE T_PARTY IF EXISTS;
DROP SEQUENCE S_PARTY_ROLE IF EXISTS;
DROP SEQUENCE S_PARTY_RELATION IF EXISTS;
DROP SEQUENCE S_PARTY_ADDRESS IF EXISTS;
DROP SEQUENCE S_PARTY_ACCOUNT IF EXISTS;
DROP SEQUENCE S_PARTY IF EXISTS;

CREATE TABLE T_PARTY (
	-- PARTY 
	PARTY_ID BIGINT PRIMARY KEY,
	PARTY_TYPE_CODE VARCHAR(1) NOT NULL,
	ID_NUMBER VARCHAR(20) NOT NULL,
	PARTY_CODE VARCHAR(10),
	IS_ENABLED BOOLEAN,
	PARTY_NAME VARCHAR(90) NOT NULL,
	-- COMMON
	DATE_OF_BIRTH DATE,
	DATE_OF_DEATH DATE,
	ID_TYPE_CODE VARCHAR(2),
	-- INDIVIDUAL
	ALIAS_NAME VARCHAR(30),
	COUNTRY_CODE_OF_BIRTH VARCHAR(3),
	COURTESY_TITLE VARCHAR(10),
	FIRST_NAME VARCHAR(30),
	MIDDLE_NAME VARCHAR(30),
	LAST_NAME VARCHAR(30),
	GENDER_CODE VARCHAR(1),
	MARITAL_CODE VARCHAR(1),
	NATIONALITY_CODE VARCHAR(3),
	OCCUPATION_CODE VARCHAR(3),
	RACE_CODE VARCHAR(1),
	RELIGION_CODE VARCHAR(2),
	-- ORGANIZATION
	ORGANIZATION_NAME VARCHAR(50),
	LEGAL_REPRESENTATIVE VARCHAR(30),
	LEGAL_TYPE_CODE VARCHAR(2),
	-- AUDIT
	CREATED_BY BIGINT, 
	CREATED_DATE DATETIME, 
	LAST_MODIFIED_BY BIGINT, 
	LAST_MODIFIED_DATE DATETIME,
	-- VERSIONING
	OPT_LOCK BIGINT
);

CREATE SEQUENCE S_PARTY;

CREATE TABLE T_PARTY_ADDRESS (
	ADDRESS_ID BIGINT PRIMARY KEY,
	ADDRESS_TYPE_CODE VARCHAR(2),
	COUNTRY_CODE VARCHAR(3),
	PROVINCE_CODE VARCHAR(3),
	CITY_CODE VARCHAR(3),
	DISTRICT_CODE VARCHAR(3),
	LINE1 VARCHAR(50),
	LINE2 VARCHAR(50),
	LINE3 VARCHAR(50),
	LINE4 VARCHAR(50),
	LINE5 VARCHAR(50),
	POSTCODE VARCHAR(6),
	IS_ENABLED BOOLEAN,
	PARTY_ID BIGINT
);
ALTER TABLE T_PARTY_ADDRESS ADD CONSTRAINT FK_PARTY_ADDRESS__1 FOREIGN KEY (PARTY_ID) REFERENCES T_PARTY (PARTY_ID);

CREATE SEQUENCE S_PARTY_ADDRESS;

CREATE TABLE T_PARTY_ACCOUNT (
	ACCOUNT_ID BIGINT PRIMARY KEY,
	ACCOUNT_NUMBER VARCHAR(30),
	ACCOUNT_TYPE_CODE VARCHAR(1),
	BANK_CODE VARCHAR(10),
	CARD_SECURITY_NUMBER VARCHAR(3),
	IS_CREDIT_CARD BOOLEAN,
	CREDIT_CARD_TYPE_CODE VARCHAR(2),
	EXPIRY_DATE DATE,
	HOLDER_NAME VARCHAR(30),
	IS_VALID BOOLEAN,
	PARTY_ID BIGINT
);
ALTER TABLE T_PARTY_ACCOUNT ADD CONSTRAINT FK_PARTY_ACCOUNT__1 FOREIGN KEY (PARTY_ID) REFERENCES T_PARTY (PARTY_ID);

CREATE SEQUENCE S_PARTY_ACCOUNT;

CREATE TABLE T_PARTY_RELATION (
	RELATION_ID BIGINT PRIMARY KEY,
	RELATION_TYPE_CODE VARCHAR(3),
	ANOTHER_PARTY_ID BIGINT,
	PARTY_ID BIGINT
);
ALTER TABLE T_PARTY_RELATION ADD CONSTRAINT FK_PARTY_RELATION__1 FOREIGN KEY (PARTY_ID) REFERENCES T_PARTY (PARTY_ID);
ALTER TABLE T_PARTY_RELATION ADD CONSTRAINT FK_PARTY_RELATION__2 FOREIGN KEY (ANOTHER_PARTY_ID) REFERENCES T_PARTY (PARTY_ID);

CREATE SEQUENCE S_PARTY_RELATION;

CREATE TABLE T_PARTY_ROLE (
	ROLE_ID BIGINT PRIMARY KEY,
	ROLE_TYPE_CODE VARCHAR(3),
	ROLE_CODE VARCHAR(10),
	IS_ENABLED BOOLEAN,
	-- AUDIT
	CREATED_BY BIGINT, 
	CREATED_DATE DATETIME, 
	LAST_MODIFIED_BY BIGINT, 
	LAST_MODIFIED_DATE DATETIME,
	-- VERSIONING
	OPT_LOCK BIGINT
);

CREATE SEQUENCE S_PARTY_ROLE;

CREATE TABLE T_BANK (
	ROLE_ID BIGINT PRIMARY KEY,
	BANK_CODE VARCHAR(10),
	DIGIT_CODE VARCHAR(10),
	BANK_TYPE_CODE VARCHAR(2),
	BANK_CLASS_CODE VARCHAR(2)
);
ALTER TABLE T_BANK ADD CONSTRAINT FK_BANK__1 FOREIGN KEY (ROLE_ID) REFERENCES T_PARTY_ROLE (ROLE_ID);