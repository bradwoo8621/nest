<?xml version="1.0" encoding="UTF-8"?>

<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util 
    	http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- set context name to utilities, if the name is same as it declared in 
		context bean, it is not necessary. here is just a sample to describe the 
		capability. -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property
			name="staticMethod"
			value="com.github.nest.sparrow.party.utils.PartyUtils.setContextName" />
		<property name="arguments">
			<list value-type="java.lang.String">
				<value>sparrow-party-context</value>
			</list>
		</property>
	</bean>

	<!-- context -->
	<bean
		id="sparrow-party-context"
		class="com.github.nest.arcteryx.meta.internal.ResourceDescriptorContext"
		scope="singleton"
		p:name="sparrow-party-context"
		init-method="afterContextInitialized">
		<property name="descriptors">
			<list>
				<!-- codes -->
				<ref bean="PartyType" />
				<ref bean="PartyRoleType" />
				<ref bean="Industry" />
				<ref bean="AcademicMajor" />
				<ref bean="EducationDegree" />
				<ref bean="JobTitle" />
				<ref bean="Occupation" />

				<!-- party -->
				<ref bean="Party" />
				<ref bean="Individual" />
				<ref bean="Organization" />
				<ref bean="Address" />
				<ref bean="EducationExperience" />
				<ref bean="WorkExperience" />

				<!-- role -->
				<ref bean="PartyRole" />
				<!-- Individual party role -->
				<ref bean="MyEmployee" />
				<!-- Organization party role -->
				<ref bean="MyBranch" />
				<ref bean="MyDepartment" />
				<ref bean="EducationOrganization" />
			</list>
		</property>
		<property name="operatorProviders">
			<map>
				<entry>
					<key>
						<util:constant
							static-field="com.github.nest.arcteryx.persistent.IPersistentBeanSaver.CODE" />
					</key>
					<bean
						class="com.github.nest.sparrow.party.internal.operator.PartyHibernatePersistentSaverProvider" />
				</entry>
				<entry>
					<key>
						<util:constant
							static-field="com.github.nest.arcteryx.persistent.IPersistentBeanLoader.CODE" />
					</key>
					<bean
						class="com.github.nest.sparrow.party.internal.operator.PartyHibernatePersistentLoaderProvider" />
				</entry>
			</map>
		</property>
		<property name="configurationInitializers">
			<list>
				<bean
					class="com.github.nest.arcteryx.persistent.internal.hibernate.HibernatePersistentConfigurationInitializer">
					<property name="properties">
						<map>
							<entry
								key="hibernate.connection.driver_class"
								value="org.hsqldb.jdbc.JDBCDriver" />
							<entry
								key="hibernate.connection.url"
								value="jdbc:hsqldb:mem:memdb" />
							<entry
								key="hibernate.connection.username"
								value="username" />
							<entry
								key="hibernate.connection.password"
								value="password" />
							<entry
								key="hibernate.dialect"
								value="org.hibernate.dialect.HSQLDialect" />
							<entry
								key="hibernate.cache.provider_class"
								value="org.hibernate.cache.internal.NoCacheProvider" />
							<entry
								key="hibernate.show_sql"
								value="true" />
							<entry
								key="hibernate.connection.pool_size"
								value="1" />
							<entry
								key="hibernate.current_session_context_class"
								value="thread" />
						</map>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- Party role properties -->
	<util:set
		id="PartyRoleProperties"
		value-type="java.lang.String">
		<value>party</value>
		<value>roleCode</value>
		<value>roleId</value>
		<value>roleOperateLog</value>
		<value>roleOptimisticLock</value>
		<value>roleEnabled</value>
	</util:set>

	<util:set
		id="PartyProperties"
		value-type="java.lang.String">
		<!-- from Party -->
		<value>partyAddresses</value>
		<value>partyCode</value>
		<value>partyId</value>
		<value>partyName</value>
		<value>partyOperateLog</value>
		<value>partyOptimisticLock</value>
		<value>partyEnabled</value>
		<!-- from Individual -->
		<value>bornIn</value>
		<value>dateOfBirth</value>
		<value>dateOfDeath</value>
		<value>educationExperiences</value>
		<value>firstName</value>
		<value>gender</value>
		<value>idNumber</value>
		<value>lastName</value>
		<value>middleName</value>
		<value>nationality</value>
		<value>workExperiences</value>
		<!-- from Organization -->
		<value>artificialPerson</value>
		<value>closeDownDate</value>
		<value>industry</value>
		<value>registerDate</value>
		<value>registerIn</value>
		<value>registerNumber</value>
	</util:set>

	<import resource="classpath:/sparrow-party-Codes.xml" />

	<import resource="classpath:/sparrow-party-Party.xml" />
	<import resource="classpath:/sparrow-party-Individual.xml" />
	<import resource="classpath:/sparrow-party-Organization.xml" />

	<import resource="classpath:/sparrow-party-Role.xml" />
	<import resource="classpath:/sparrow-party-RelatedBranch.xml" />

	<import resource="classpath:/sparrow-party-MyBranch.xml" />
	<import resource="classpath:/sparrow-party-MyDepartment.xml" />
	<import resource="classpath:/sparrow-party-MyEmployee.xml" />
	<import resource="classpath:/sparrow-party-EducationOrganization.xml" />
</beans>