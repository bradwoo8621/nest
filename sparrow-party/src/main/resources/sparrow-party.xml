<?xml version="1.0" encoding="UTF-8"?>

<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util 
    	http://www.springframework.org/schema/util/spring-util.xsd">

	<bean
		id="sparrow-party-context"
		class="com.github.nest.arcteryx.meta.internal.ResourceDescriptorContext"
		scope="singleton"
		p:name="sparrow-party-context"
		init-method="afterContextInitialized">
		<property name="descriptors">
			<list>
				<ref bean="PartyRoleType" />
				<ref bean="Party" />
				<ref bean="Individual" />
			</list>
		</property>
		<property name="identifiedDescriptors">
			<map>
				<entry key="AsParty.Employee">
					<ref bean="AsParty.Employee" />
				</entry>
			</map>
		</property>
		<property name="operatorProviders">
			<map>
				<entry>
					<key>
						<util:constant
							static-field="com.github.nest.arcteryx.persistent.IPersistentBeanSaver.CODE" />
					</key>
					<bean
						class="com.github.nest.sparrow.party.internal.operator.PartyHibernatePersistentSaverProvider" />
				</entry>
			</map>
		</property>
		<property name="configurationInitializers">
			<list>
				<bean
					class="com.github.nest.arcteryx.persistent.internal.hibernate.HibernatePersistentConfigurationInitializer">
					<property name="properties">
						<map>
							<entry
								key="hibernate.connection.driver_class"
								value="org.hsqldb.jdbc.JDBCDriver" />
							<entry
								key="hibernate.connection.url"
								value="jdbc:hsqldb:mem:memdb" />
							<entry
								key="hibernate.connection.username"
								value="username" />
							<entry
								key="hibernate.connection.password"
								value="password" />
							<entry
								key="hibernate.dialect"
								value="org.hibernate.dialect.HSQLDialect" />
							<entry
								key="hibernate.cache.provider_class"
								value="org.hibernate.cache.internal.NoCacheProvider" />
							<entry
								key="hibernate.show_sql"
								value="true" />
							<entry
								key="hibernate.connection.pool_size"
								value="1" />
							<entry
								key="hibernate.current_session_context_class"
								value="thread" />
						</map>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- com.github.nest.sparrow.party.internal.PartyRoleType -->
	<bean
		id="PartyRoleType"
		class="com.github.nest.arcteryx.meta.beans.internal.CachedBeanDescriptor"
		p:resourceClass="com.github.nest.sparrow.party.internal.PartyRoleType"
		p:name="PartyRoleType"
		p:description="Party role type"
		scope="singleton">
		<property name="properties">
			<list>
				<bean
					class="com.github.nest.arcteryx.meta.beans.internal.BeanPropertyDescriptor"
					p:name="name"
					p:description="Name of party role type" />
				<bean
					class="com.github.nest.arcteryx.meta.beans.internal.BeanPropertyDescriptor"
					p:name="code"
					p:description="Code of party role type" />
			</list>
		</property>
		<property name="operators">
			<list>
				<bean
					class="com.github.nest.sparrow.party.internal.operator.PartyRoleTypeCacheProvider"
					init-method="readFromClassPath"
					p:fileClassPath="/partyRoleTypes.list" />
			</list>
		</property>
	</bean>
	<!-- com.github.nest.sparrow.party.internal.Party -->
	<bean
		id="Party"
		class="com.github.nest.arcteryx.persistent.internal.StandalonePersistentBeanDescriptor"
		p:resourceClass="com.github.nest.sparrow.party.internal.Party"
		p:name="Party"
		p:description="Party abstract implementation, lead all sub classes"
		scope="singleton"
		p:tableName="T_PARTY"
		p:discriminatorColumnName="PARTY_TYPE">
		<property name="properties">
			<list>
				<!-- ID of party -->
				<bean
					class="com.github.nest.arcteryx.persistent.internal.PersistentBeanPropertyDescriptor"
					p:name="id"
					p:description="ID of party">
					<property name="persistentColumn">
						<bean
							class="com.github.nest.arcteryx.persistent.internal.PrimitivePersistentColumn"
							p:name="PARTY_ID"
							p:primaryKey="true"
							p:type="LONG">
							<property name="primaryKeyGenerator">
								<bean
									class="com.github.nest.arcteryx.persistent.internal.hibernate.pkgenerator.SequenceKey"
									p:sequenceName="S_PARTY" />
							</property>
						</bean>
					</property>
				</bean>
				<!-- Name of party -->
				<bean
					class="com.github.nest.arcteryx.persistent.internal.PersistentBeanPropertyDescriptor"
					p:name="name"
					p:description="Name of party">
					<property name="persistentColumn">
						<bean
							class="com.github.nest.arcteryx.persistent.internal.PrimitivePersistentColumn"
							p:name="PARTY_NAME"
							p:type="STRING" />
					</property>
				</bean>
				<!-- Code of party -->
				<bean
					class="com.github.nest.arcteryx.persistent.internal.PersistentBeanPropertyDescriptor"
					p:name="code"
					p:description="Code of party">
					<property name="persistentColumn">
						<bean
							class="com.github.nest.arcteryx.persistent.internal.PrimitivePersistentColumn"
							p:name="PARTY_CODE"
							p:type="STRING" />
					</property>
				</bean>
				<!-- TODO addresses -->
				<!-- operate log -->
				<bean
					class="com.github.nest.arcteryx.persistent.internal.PersistentBeanPropertyDescriptor"
					p:name="operateLog"
					p:description="Operate log of party">
					<property name="persistentColumn">
						<bean
							class="com.github.nest.arcteryx.persistent.internal.EmbeddedPersistentColumn"
							p:embeddedBeanClass="com.github.nest.goose.operate.OperateLog"
							p:referencedBeanContextName="goose-context" />
					</property>
				</bean>
				<!-- optimistic lock -->
				<bean
					class="com.github.nest.arcteryx.persistent.internal.PersistentBeanPropertyDescriptor"
					p:name="optimisticLock"
					p:description="Optimistic lock of party">
					<property name="persistentColumn">
						<bean
							class="com.github.nest.arcteryx.persistent.internal.PrimitivePersistentColumn"
							p:name="OPTIMISTIC_LOCK"
							p:type="LONG"
							p:version="true" />
					</property>
				</bean>
			</list>
		</property>
	</bean>
	<!-- com.github.nest.sparrow.party.internal.Individual -->
	<!-- extends from Party, share the table -->
	<bean
		id="Individual"
		class="com.github.nest.arcteryx.persistent.internal.StandalonePersistentBeanDescriptor"
		p:resourceClass="com.github.nest.sparrow.party.internal.Individual"
		p:name="Individual"
		p:description="Individual abstract implementation, lead all individual type sub classes"
		scope="singleton"
		p:tableName="T_PARTY">
		<property name="properties">
			<list>
				<!-- id number -->
				<bean
					class="com.github.nest.arcteryx.persistent.internal.PersistentBeanPropertyDescriptor"
					p:name="idNumber"
					p:description="ID number of individual">
					<property name="persistentColumn">
						<bean
							class="com.github.nest.arcteryx.persistent.internal.PrimitivePersistentColumn"
							p:name="ID_NUMBER"
							p:type="STRING" />
					</property>
				</bean>
				<!-- gender -->
				<bean
					class="com.github.nest.arcteryx.persistent.internal.PersistentBeanPropertyDescriptor"
					p:name="gender"
					p:description="Gender of individual">
					<property name="persistentColumn">
						<bean
							class="com.github.nest.arcteryx.persistent.internal.ManyToOnePersistentColumn"
							p:referencedBeanClass="com.github.nest.goose.internal.human.Gender"
							p:referencedBeanContextName="goose-context"
							p:foreignKeyColumnName="GENDER_CODE"
							p:foreignKeyPropertyName="code" />
					</property>
				</bean>
				<!-- first name -->
				<bean
					class="com.github.nest.arcteryx.persistent.internal.PersistentBeanPropertyDescriptor"
					p:name="firstName"
					p:description="First name of individual">
					<property name="persistentColumn">
						<bean
							class="com.github.nest.arcteryx.persistent.internal.PrimitivePersistentColumn"
							p:name="FIRST_NAME"
							p:type="STRING" />
					</property>
				</bean>
				<!-- middle name -->
				<bean
					class="com.github.nest.arcteryx.persistent.internal.PersistentBeanPropertyDescriptor"
					p:name="middleName"
					p:description="Middle name of individual">
					<property name="persistentColumn">
						<bean
							class="com.github.nest.arcteryx.persistent.internal.PrimitivePersistentColumn"
							p:name="MIDDLE_NAME"
							p:type="STRING" />
					</property>
				</bean>
				<!-- last name -->
				<bean
					class="com.github.nest.arcteryx.persistent.internal.PersistentBeanPropertyDescriptor"
					p:name="lastName"
					p:description="Last name of individual">
					<property name="persistentColumn">
						<bean
							class="com.github.nest.arcteryx.persistent.internal.PrimitivePersistentColumn"
							p:name="LAST_NAME"
							p:type="STRING" />
					</property>
				</bean>
				<!-- date of birth -->
				<bean
					class="com.github.nest.arcteryx.persistent.internal.PersistentBeanPropertyDescriptor"
					p:name="dateOfBirth"
					p:description="Birthday of individual">
					<property name="persistentColumn">
						<bean
							class="com.github.nest.arcteryx.persistent.internal.PrimitivePersistentColumn"
							p:name="DATE_OF_BIRTH"
							p:type="DATE" />
					</property>
				</bean>
				<!-- date of death -->
				<bean
					class="com.github.nest.arcteryx.persistent.internal.PersistentBeanPropertyDescriptor"
					p:name="dateOfDeath"
					p:description="Date of death of individual">
					<property name="persistentColumn">
						<bean
							class="com.github.nest.arcteryx.persistent.internal.PrimitivePersistentColumn"
							p:name="DATE_OF_DEATH"
							p:type="DATE" />
					</property>
				</bean>
				<!-- born-in country -->
				<bean
					class="com.github.nest.arcteryx.persistent.internal.PersistentBeanPropertyDescriptor"
					p:name="bornIn"
					p:description="Born-in country of individual">
					<property name="persistentColumn">
						<bean
							class="com.github.nest.arcteryx.persistent.internal.ManyToOnePersistentColumn"
							p:referencedBeanClass="com.github.nest.goose.internal.location.Country"
							p:referencedBeanContextName="goose-context"
							p:foreignKeyColumnName="BORN_IN_COUNTRY_CODE"
							p:foreignKeyPropertyName="code" />
					</property>
				</bean>
				<!-- nationality -->
				<bean
					class="com.github.nest.arcteryx.persistent.internal.PersistentBeanPropertyDescriptor"
					p:name="nationality"
					p:description="Nationality of individual">
					<property name="persistentColumn">
						<bean
							class="com.github.nest.arcteryx.persistent.internal.ManyToOnePersistentColumn"
							p:referencedBeanClass="com.github.nest.goose.internal.location.Country"
							p:referencedBeanContextName="goose-context"
							p:foreignKeyColumnName="NATIONALITY_CODE"
							p:foreignKeyPropertyName="code" />
					</property>
				</bean>
				<!-- TODO work experiences -->
				<!-- TODO education experiences -->
			</list>
		</property>
	</bean>
	<!-- com.github.nest.sparrow.party.internal.Employee -->
	<!-- for save party, no additional property. extends from Individual -->
	<bean
		id="AsParty.Employee"
		class="com.github.nest.arcteryx.persistent.internal.StandalonePersistentBeanDescriptor"
		p:resourceClass="com.github.nest.sparrow.party.internal.Employee"
		p:name="Employee"
		p:description="Individual employee, which will be treated as a party."
		scope="singleton"
		p:entityName="AsParty.Employee"
		p:tableName="T_PARTY">
		<!-- extends Party directly -->
		<!-- use property of Individual -->
	</bean>
</beans>